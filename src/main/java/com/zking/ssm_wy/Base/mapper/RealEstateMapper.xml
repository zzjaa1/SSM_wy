<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.ssm_wy.Base.mapper.RealEstateMapper" >
  <resultMap id="BaseResultMap" type="com.zking.ssm_wy.Base.model.RealEstate" >
    <constructor >
      <idArg column="re_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="re_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="re_price" jdbcType="FLOAT" javaType="java.lang.Double" />
      <arg column="re_date" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="refkfs" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="o_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="re_card" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="re_phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="o_phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="re_remarks" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="h_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="o_number" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
    <sql id="Base_Column_List" >
      re_id, re_number, re_price, re_date, re_date, o_name, re_card, re_phone,
      o_phone, re_remarks,h_number,o_number
    </sql>
  <select id="addReal" resultType="String" parameterType="com.zking.ssm_wy.Base.model.RealEstate">
    INSERT INTO real_estate (
    re_id,re_number,Re_price,Re_date,Re_fkfs,O_name,Re_card,Re_phone,O_phone,re_remarks,h_number,o_number
    )
    VALUES
    (#{reid},#{renumber},#{reprice},#{redate},#{refkfs},#{oname},
    #{recard},#{rephone},#{ophone},#{reremarks},#{hnumber},#{onumber})
  </select>
    <select id="querytj" resultType="map">
      SELECT xq.x_number,COUNT(b.b_buliding)b_buliding,xq.x_mj,x_buliding FROM xiaoqu xq
      LEFT JOIN buliding b
      ON xq.x_number = b.x_number
      LEFT JOIN (SELECT * FROM houses WHERE h_unitNumber IS NOT NULL) dy
      ON b.b_number = dy.b_number
      LEFT JOIN (SELECT * FROM houses WHERE h_unitNumber IS NULL) s
      ON dy.h_number=s.b_number  GROUP BY x_buliding
    </select>
    <select id="queryxsetj" resultType="map">
      SELECT xq.x_number,xq.x_buliding,SUM(re.Re_price)AS price,MONTH(re.Re_date) AS mouth,YEAR(re.Re_date) AS years FROM xiaoqu xq
        LEFT JOIN buliding b
        ON xq.x_number = b.x_number
        LEFT JOIN (SELECT * FROM houses WHERE h_unitNumber IS NOT NULL) dy
        ON b.b_number = dy.b_number
        LEFT JOIN (SELECT * FROM houses WHERE h_unitNumber IS NULL) s
        ON dy.h_number=s.b_number
        INNER JOIN Real_estate re ON s.h_number =re.h_number
         <if test="null!=year and ''!=year">
           AND YEAR (re.Re_date)=#{year}
         </if>
        GROUP BY xq.x_number,YEAR(re.Re_date) HAVING  price IS NOT NULL ORDER BY SUM(re.Re_price) DESC
    </select>
  <select id="queryxsetj2" resultType="map">
    SELECT xq.x_number,xq.x_buliding, MONTH(re.Re_date) AS mouth,YEAR(re.Re_date) AS years,SUM(re.Re_price)AS price
    <if test="null!=mouth and ''!=mouth">
      ,DAY(re.Re_date) AS days
    </if>
       FROM xiaoqu xq
      LEFT JOIN buliding b
      ON xq.x_number = b.x_number
      LEFT JOIN (SELECT * FROM houses WHERE h_unitNumber IS NOT NULL) dy
      ON b.b_number = dy.b_number
      LEFT JOIN (SELECT * FROM houses WHERE h_unitNumber IS NULL) s
      ON dy.h_number=s.b_number
      INNER JOIN Real_estate re ON s.h_number =re.h_number
      GROUP BY MONTH(re.Re_date),YEAR(re.Re_date),xq.x_number
    <if test="null!=mouth and ''!=mouth">
      ,DAY(re.Re_date)
    </if>
    <if test="null!=year and ''!=year">
      HAVING years=#{year}
    </if>
    <if test="null!=x_number and ''!=x_number">
      AND xq.x_number=#{x_number}
    </if>
    <if test="null!=mouth and ''!=mouth">
      AND mouth=#{mouth}
    </if>
  </select>


</mapper>